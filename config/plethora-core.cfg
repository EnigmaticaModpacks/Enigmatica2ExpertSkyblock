# Configuration file

##########################################################################################################
# basecosts
#--------------------------------------------------------------------------------------------------------#
# The base costs for all methods.
##########################################################################################################

basecosts {
    I:"org.squiddev.plethora.gameplay.modules.glasses.methods.MethodsCanvas#canvas(IModuleContainer)"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.methods.MethodsCanvas#canvas3d(IModuleContainer)"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.methods.MethodsCanvas#clear(ObjectGroup)"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.methods.MethodsCanvas#remove(BaseObject)"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.methods.MethodsCanvas2D#addDot(Group2D)"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.methods.MethodsCanvas2D#addGroup(Group2D)"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.methods.MethodsCanvas2D#addItem(Group2D)"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.methods.MethodsCanvas2D#addLine(Group2D)"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.methods.MethodsCanvas2D#addLines(Group2D)"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.methods.MethodsCanvas2D#addPolygon(Group2D)"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.methods.MethodsCanvas2D#addRectangle(Group2D)"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.methods.MethodsCanvas2D#addText(Group2D)"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.methods.MethodsCanvas2D#addTriangle(Group2D)"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.methods.MethodsCanvas2D#getSize(Frame2D)"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.methods.MethodsCanvas3D#addBox(Group3D)"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.methods.MethodsCanvas3D#addFrame(Group3D)"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.methods.MethodsCanvas3D#addItem(Group3D)"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.methods.MethodsCanvas3D#addLine(Group3D)"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.methods.MethodsCanvas3D#create(Origin3D)"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.Colourable#getAlpha(Colourable)"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.Colourable#getColour(Colourable)"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.Colourable#setAlpha(Colourable)"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.Colourable#setColour(Colourable)"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.Colourable$getColor"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.Colourable$setColor"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.ItemObject#getItem(ItemObject)"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.ItemObject#setItem(ItemObject)"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.Scalable#getScale(Scalable)"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.Scalable#setScale(Scalable)"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.TextObject#getLineHeight(TextObject)"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.TextObject#getText(TextObject)"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.TextObject#hasShadow(TextObject)"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.TextObject#setLineHeight(TextObject)"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.TextObject#setShadow(TextObject)"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.TextObject#setText(TextObject)"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.Textable$getLineHeight"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.Textable$getText"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.Textable$hasShadow"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.Textable$setLineHeight"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.Textable$setShadow"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.Textable$setText"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.object2d.Item2D$getItem"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.object2d.Item2D$setItem"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.object2d.MultiPoint2D#getPoint(MultiPoint2D)"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.object2d.MultiPoint2D#setPoint(MultiPoint2D)"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.object2d.MultiPointResizable2D#getPointCount(MultiPointResizable2D)"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.object2d.MultiPointResizable2D#insertPoint(MultiPointResizable2D)"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.object2d.MultiPointResizable2D#removePoint(MultiPointResizable2D)"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.object2d.Positionable2D#getPosition(Positionable2D)"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.object2d.Positionable2D#setPosition(Positionable2D)"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.object2d.Rectangle#getSize(Rectangle)"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.object2d.Rectangle#setSize(Rectangle)"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.object3d.Box#getSize(Box)"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.object3d.Box#setSize(Box)"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.object3d.DepthTestable#isDepthTested(DepthTestable)"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.object3d.DepthTestable#setDepthTested(DepthTestable)"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.object3d.MultiPoint3D#getPoint(MultiPoint3D)"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.object3d.MultiPoint3D#setPoint(MultiPoint3D)"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.object3d.ObjectRoot3D#recenter(ObjectRoot3D)"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.object3d.Positionable3D#getPosition(Positionable3D)"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.object3d.Positionable3D#setPosition(Positionable3D)"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.object3d.Rotatable3D#getRotation(Rotatable3D)"=0
    I:"org.squiddev.plethora.gameplay.modules.glasses.objects.object3d.Rotatable3D#setRotation(Rotatable3D)"=0
    I:"org.squiddev.plethora.gameplay.modules.methods.MethodsChat#capture(IModuleContainer)"=0
    I:"org.squiddev.plethora.gameplay.modules.methods.MethodsChat#clearCaptures(IModuleContainer)"=0
    I:"org.squiddev.plethora.gameplay.modules.methods.MethodsChat#say(IModuleContainer)"=0
    I:"org.squiddev.plethora.gameplay.modules.methods.MethodsChat#tell(IModuleContainer)"=0
    I:"org.squiddev.plethora.gameplay.modules.methods.MethodsChat#uncapture(IModuleContainer)"=0
    I:"org.squiddev.plethora.gameplay.modules.methods.MethodsChatCreative#capture(IModuleContainer)"=0
    I:"org.squiddev.plethora.gameplay.modules.methods.MethodsChatCreative#clearCaptures(IModuleContainer)"=0
    I:"org.squiddev.plethora.gameplay.modules.methods.MethodsChatCreative#say(IModuleContainer)"=0
    I:"org.squiddev.plethora.gameplay.modules.methods.MethodsChatCreative#uncapture(IModuleContainer)"=0
    I:"org.squiddev.plethora.gameplay.modules.methods.MethodsIntrospection#getID(IModuleContainer)"=0
    I:"org.squiddev.plethora.gameplay.modules.methods.MethodsIntrospection#getMetaOwner(IModuleContainer)"=0
    I:"org.squiddev.plethora.gameplay.modules.methods.MethodsIntrospection#getName(IModuleContainer)"=0
    I:"org.squiddev.plethora.gameplay.modules.methods.MethodsLaser#fire"=0
    I:"org.squiddev.plethora.gameplay.modules.methods.MethodsScanner#getBlockMeta(IModuleContainer)"=0
    I:"org.squiddev.plethora.gameplay.modules.methods.MethodsScanner#scan(IModuleContainer)"=0
    I:"org.squiddev.plethora.gameplay.modules.methods.MethodsSensor#getMetaByID(IModuleContainer)"=0
    I:"org.squiddev.plethora.gameplay.modules.methods.MethodsSensor#getMetaByName(IModuleContainer)"=0
    I:"org.squiddev.plethora.gameplay.modules.methods.MethodsSensor#sense(IModuleContainer)"=0
    I:org.squiddev.plethora.integration.MethodDocumentation=0
    I:org.squiddev.plethora.integration.MethodMeta=0
    I:org.squiddev.plethora.integration.MethodTransferLocations=0
    I:"org.squiddev.plethora.integration.MethodsCore#filterModules(IModuleContainer)"=0
    I:"org.squiddev.plethora.integration.MethodsCore#getDocs(IMethodCollection)"=0
    I:"org.squiddev.plethora.integration.MethodsCore#hasModule(IModuleContainer)"=0
    I:"org.squiddev.plethora.integration.MethodsCore#listModules(IModuleContainer)"=0
    I:"org.squiddev.plethora.integration.MethodsModules$filterModules"=0
    I:"org.squiddev.plethora.integration.MethodsModules$hasModule"=0
    I:"org.squiddev.plethora.integration.MethodsModules$listModules"=0
    I:"org.squiddev.plethora.integration.appliedenergistics.CraftingResult#getComponents(CraftingResult)"=0
    I:"org.squiddev.plethora.integration.appliedenergistics.CraftingResult#getId(CraftingResult)"=0
    I:"org.squiddev.plethora.integration.appliedenergistics.CraftingResult#isCanceled(CraftingResult)"=0
    I:"org.squiddev.plethora.integration.appliedenergistics.CraftingResult#isFinished(CraftingResult)"=0
    I:"org.squiddev.plethora.integration.appliedenergistics.CraftingResult#status(CraftingResult)"=0
    I:org.squiddev.plethora.integration.appliedenergistics.MethodCraftItem=0
    I:"org.squiddev.plethora.integration.appliedenergistics.MethodCraftItem#craft(IAEItemStack)"=0
    I:org.squiddev.plethora.integration.appliedenergistics.MethodExportItem=0
    I:"org.squiddev.plethora.integration.appliedenergistics.MethodExportItem#export(IAEItemStack)"=0
    I:"org.squiddev.plethora.integration.appliedenergistics.MethodsGrid#findItem(IGrid)"=0
    I:"org.squiddev.plethora.integration.appliedenergistics.MethodsGrid#findItems(IGrid)"=0
    I:"org.squiddev.plethora.integration.appliedenergistics.MethodsGrid#getCraftingCPUs(IGrid)"=0
    I:"org.squiddev.plethora.integration.appliedenergistics.MethodsGrid#getNetworkEnergyStored(IGrid)"=0
    I:"org.squiddev.plethora.integration.appliedenergistics.MethodsGrid#getNetworkEnergyUsage(IGrid)"=0
    I:"org.squiddev.plethora.integration.appliedenergistics.MethodsGrid#getNodeEnergyUsage(IGridBlock)"=0
    I:"org.squiddev.plethora.integration.appliedenergistics.MethodsGrid#listAvailableItems(IGrid)"=0
    I:"org.squiddev.plethora.integration.astralsorcery.MethodsAstralSorcery#getAstralProgress(IModuleContainer)"=0
    I:"org.squiddev.plethora.integration.astralsorcery.MethodsAstralSorcery#getGateways(TileCelestialGateway)"=0
    I:org.squiddev.plethora.integration.baubles.MethodIntrospectionBaublesInventory=0
    I:"org.squiddev.plethora.integration.baubles.MethodIntrospectionBaublesInventory#getBaubles(IModuleContainer)"=0
    I:"org.squiddev.plethora.integration.computercraft.MethodsIntrospectionTurtle#getInventory(IModuleContainer)"=0
    I:"org.squiddev.plethora.integration.computercraft.MethodsKineticTurtle#swing(IModuleContainer)"=0
    I:"org.squiddev.plethora.integration.computercraft.MethodsKineticTurtle#use(IModuleContainer)"=0
    I:"org.squiddev.plethora.integration.forestry.MethodsAnalyzer#getMutationsList(IModuleContainer)"=0
    I:"org.squiddev.plethora.integration.forestry.MethodsAnalyzer#getSpeciesList(IModuleContainer)"=0
    I:"org.squiddev.plethora.integration.forestry.MethodsAnalyzer#getSpeciesRoots(IModuleContainer)"=0
    I:"org.squiddev.plethora.integration.forestry.MethodsBeeHousing#getDrone(IBeeHousing)"=0
    I:"org.squiddev.plethora.integration.forestry.MethodsBeeHousing#getHumidity(IBeeHousing)"=0
    I:"org.squiddev.plethora.integration.forestry.MethodsBeeHousing#getQueen(IBeeHousing)"=0
    I:"org.squiddev.plethora.integration.forestry.MethodsBeeHousing#getTemperature(IBeeHousing)"=0
    I:"org.squiddev.plethora.integration.forestry.MethodsErrorLogicSource#getErrors(IErrorLogicSource)"=0
    I:"org.squiddev.plethora.integration.ic2.MethodsEnergy#getConductionLoss(IEnergyConductor)"=0
    I:"org.squiddev.plethora.integration.ic2.MethodsEnergy#getConductorBreakdownEnergy(IEnergyConductor)"=0
    I:"org.squiddev.plethora.integration.ic2.MethodsEnergy#getDemandedEnergy(IEnergySink)"=0
    I:"org.squiddev.plethora.integration.ic2.MethodsEnergy#getEUCapacity(IEnergyStorage)"=0
    I:"org.squiddev.plethora.integration.ic2.MethodsEnergy#getEUOutput(IEnergyStorage)"=0
    I:"org.squiddev.plethora.integration.ic2.MethodsEnergy#getEUStored(IEnergyStorage)"=0
    I:"org.squiddev.plethora.integration.ic2.MethodsEnergy#getEuCapacity(ItemStack)"=0
    I:"org.squiddev.plethora.integration.ic2.MethodsEnergy#getEuStored(ItemStack)"=0
    I:"org.squiddev.plethora.integration.ic2.MethodsEnergy#getInsulationBreakdownEnergy(IEnergyConductor)"=0
    I:"org.squiddev.plethora.integration.ic2.MethodsEnergy#getInsulationEnergyAbsorption(IEnergyConductor)"=0
    I:"org.squiddev.plethora.integration.ic2.MethodsEnergy#getOfferedEnergy(IEnergySource)"=0
    I:"org.squiddev.plethora.integration.ic2.MethodsEnergy#getSinkTier(IEnergySink)"=0
    I:"org.squiddev.plethora.integration.ic2.MethodsEnergy#getSourceTier(IEnergySource)"=0
    I:"org.squiddev.plethora.integration.ic2.MethodsEnergy$MethodGetEuCapacity"=0
    I:"org.squiddev.plethora.integration.ic2.MethodsEnergy$MethodGetEuStored"=0
    I:"org.squiddev.plethora.integration.ic2.MethodsReactor#getReactorCore(IReactorChamber)"=0
    I:"org.squiddev.plethora.integration.mcmultipart.MethodsMultipart#getSlottedPart(IMultipartContainer)"=0
    I:"org.squiddev.plethora.integration.mcmultipart.MethodsMultipart#getSlottedPartMeta(IMultipartContainer)"=0
    I:"org.squiddev.plethora.integration.mcmultipart.MethodsMultipart#listParts(IMultipartContainer)"=0
    I:"org.squiddev.plethora.integration.mcmultipart.MethodsMultipart#listSlottedParts(IMultipartContainer)"=0
    I:"org.squiddev.plethora.integration.rf.MethodsEnergy#getRFCapacity(IEnergyHandler)"=0
    I:"org.squiddev.plethora.integration.rf.MethodsEnergy#getRFCapacity(ItemStack)"=0
    I:"org.squiddev.plethora.integration.rf.MethodsEnergy#getRFCapacityStored(IEnergyStorage)"=0
    I:"org.squiddev.plethora.integration.rf.MethodsEnergy#getRFStored(IEnergyHandler)"=0
    I:"org.squiddev.plethora.integration.rf.MethodsEnergy#getRFStored(IEnergyStorage)"=0
    I:"org.squiddev.plethora.integration.rf.MethodsEnergy#getRFStored(ItemStack)"=0
    I:"org.squiddev.plethora.integration.rf.MethodsEnergy$MaxMethodEnergyStoredItem"=0
    I:"org.squiddev.plethora.integration.rf.MethodsEnergy$MethodEnergyStoredItem"=0
    I:"org.squiddev.plethora.integration.rf.MethodsEnergy$getRFCapacityHandler"=0
    I:"org.squiddev.plethora.integration.rf.MethodsEnergy$getRFCapacityStoredStorage"=0
    I:"org.squiddev.plethora.integration.rf.MethodsEnergy$getRFStoredHandler"=0
    I:"org.squiddev.plethora.integration.rf.MethodsEnergy$getRFStoredStorage"=0
    I:"org.squiddev.plethora.integration.storagedrawers.MethodsIDrawer#getCapacity(IDrawer)"=0
    I:"org.squiddev.plethora.integration.storagedrawers.MethodsIDrawer#getCount(IDrawer)"=0
    I:"org.squiddev.plethora.integration.storagedrawers.MethodsIDrawer#getItemMeta(IDrawer)"=0
    I:"org.squiddev.plethora.integration.storagedrawers.MethodsIDrawerGroup#getDrawer(IDrawerGroup)"=0
    I:"org.squiddev.plethora.integration.storagedrawers.MethodsIDrawerGroup#getDrawerCount(IDrawerGroup)"=0
    I:"org.squiddev.plethora.integration.tconstruct.MethodsSmeltery#getController(TileSmelteryComponent)"=0
    I:"org.squiddev.plethora.integration.tconstruct.MethodsSmeltery#getFuels(TileHeatingStructureFuelTank)"=0
    I:"org.squiddev.plethora.integration.tconstruct.MethodsSmeltery#getMolten(ISmelteryTankHandler)"=0
    I:"org.squiddev.plethora.integration.tconstruct.MethodsSmeltery#getTemperature(TileHeatingStructureFuelTank)"=0
    I:"org.squiddev.plethora.integration.tconstruct.MethodsSmeltery#selectMolten(ISmelteryTankHandler)"=0
    I:"org.squiddev.plethora.integration.tesla.IntegrationTesla#getTeslaCapacity(ITeslaHolder)"=0
    I:"org.squiddev.plethora.integration.tesla.IntegrationTesla#getTeslaStored(ITeslaHolder)"=0
    I:org.squiddev.plethora.integration.vanilla.method.MethodFluidHandler=0
    I:org.squiddev.plethora.integration.vanilla.method.MethodItemConsume=0
    I:org.squiddev.plethora.integration.vanilla.method.MethodItemElytraActivate=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsClock#getCelestialAngle(IModuleContainer)"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsClock#getDay(IModuleContainer)"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsClock#getMoonPhase(IModuleContainer)"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsClock#getTime(IModuleContainer)"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsDaylightSensor#getBlockLight(IModuleContainer)"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsDaylightSensor#getSkyLight(IModuleContainer)"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsDaylightSensor#getWeather(IModuleContainer)"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsDaylightSensor#hasSky(IModuleContainer)"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsEnergyHandler#getEnergyCapacity(IEnergyStorage)"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsEnergyHandler#getEnergyStored(IEnergyStorage)"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsFluidTransfer#pullFluid(IFluidHandler)"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsFluidTransfer#pushFluid(IFluidHandler)"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsIntrospectionEntity#getEnder(IModuleContainer)"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsIntrospectionEntity#getEquipment(IModuleContainer)"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsIntrospectionEntity#getInventory(IModuleContainer)"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsInventory#getItem(IItemHandler)"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsInventory#getItemMeta(IItemHandler)"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsInventory#list(IItemHandler)"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsInventory#size(IItemHandler)"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsInventoryTransfer#pullItems(IItemHandler)"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsInventoryTransfer#pushItems(IItemHandler)"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsInventoryWorld#drop(IItemHandler)"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsInventoryWorld#drop(ItemSlot)"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsInventoryWorld#suck(IItemHandler)"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsInventoryWorld$MethodItemDrop"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsInventoryWorld$MethodItemHandlerDrop"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsInventoryWorld$MethodItemHandlerSuck"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsKinetic#disableAI(IModuleContainer)"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsKinetic#enableAI(IModuleContainer)"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsKinetic#isWalking(IModuleContainer)"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsKinetic#launch"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsKinetic#walk"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsKineticActions#swing(IModuleContainer)"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsKineticActions#use(IModuleContainer)"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsKineticEntity#explode(IModuleContainer)"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsKineticEntity#look(IModuleContainer)"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsKineticEntity#propel"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsKineticEntity#shootBlaze"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsKineticEntity#shootSkeleton"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsKineticEntity#shootWitch"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsKineticEntity#teleport"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsKineticEntity$shoot"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsNoteblock#playNote(IModuleContainer)"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsNoteblock#playSound(IModuleContainer)"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsVanillaTileEntities#getBrewTime(TileEntityBrewingStand)"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsVanillaTileEntities#getBurnTime(TileEntityFurnace)"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsVanillaTileEntities#getCookTime(TileEntityFurnace)"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsVanillaTileEntities#getRemainingBurnTime(TileEntityFurnace)"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsVanillaTileEntities#getSignText(TileEntitySign)"=0
    I:"org.squiddev.plethora.integration.vanilla.method.MethodsVanillaTileEntities#setSignText(TileEntitySign)"=0
}


##########################################################################################################
# blacklist
#--------------------------------------------------------------------------------------------------------#
# Blacklist various providers
##########################################################################################################

blacklist {
    # List of mods to block.
    #  IMPORTANT: This does not block wrapping a mod's peripherals, just disables
    #  custom mod specific integration.
    S:blacklistMods <
     >

    # List of modules to blacklist.
    S:blacklistModules <
     >

    # List of modules to blacklist from being mounted on a pocket computer.
    # 
    #  This includes all blacklisted modules.
    S:blacklistModulesPocket <
     >

    # List of modules to blacklist from being mounted from a tile.
    # 
    #  For instance, the note block tile exposes the minecraft:noteblock module, allowing
    #  you to use that module from the tile's peripheral, rather than through a manipulator.
    # 
    #  This includes all blacklisted modules.
    S:blacklistModulesTile <
     >

    # List of modules to blacklist from being mounted on a turtle.
    # 
    #  This includes all blacklisted modules.
    S:blacklistModulesTurtle <
     >

    # List of modules to blacklist from being mounted on a minecart or other vehicle.
    # 
    #  This includes all blacklisted modules.
    S:blacklistModulesVehicle <
     >

    # List of provider classes, packages or methods which are blacklisted.
    #  This will blacklist all converters, methods and transfer and meta providers
    #  matching a pattern.
    # 
    #  This only applies to classes registered through annotations and does not blacklist
    #  method builders.
    # 
    #  Valid forms:
    #  - "foo.bar" - All classes in package (note trailing period).
    #  - "foo.bar.Provider" - This class, all its members and nested classes
    #  - "foo.bar.Provider#method" - A particular method with a name
    S:blacklistProviders <
     >

    # List of tile entity classes or packages which will not be wrapped
    #  as peripherals. For example use "net.minecraft." to disable wrapping
    #  any vanilla peripheral. This does not blacklist subclasses.
    S:blacklistTileEntities <
     >
}


##########################################################################################################
# costsystem
#--------------------------------------------------------------------------------------------------------#
# Some methods have a particular cost: they
#  consume a set amount of energy from their owner.
#  This level regenerates over time.
# 
#  *Note:* These values only apply to the default handler.
#  Other mods may add custom handlers.
##########################################################################################################

costsystem {
    # Allow costs to go into the negative.
    #  Methods will fail when there is negative energy.
    #  This allows you to use costs higher than the allocated
    #  buffer and so have a more traditional rate-limiting system.
    B:allowNegative=false

    # Wait for the system to get sufficient energy instead of throwing
    #  an error.
    B:awaitRegen=true

    # The energy level all systems start at
    D:initial=100.0

    # The maximum energy level an item can have
    D:limit=100.0

    # The amount of energy regenerated each tick
    D:regen=10.0
}


##########################################################################################################
# testing
#--------------------------------------------------------------------------------------------------------#
# Various options for debugging and testing this mod
##########################################################################################################

testing {
    # Verify generated bytecode for generated methods.
    #  Only needed if you're developing new method builders.
    B:bytecodeVerify=false
    B:debug=false
    B:likeDocs=false

    # Enable strict loading mode. This will ensure non-lazy
    #  loading of methods, and crash when an error is encountered
    #  rather than just logging.
    B:strict=false
}


